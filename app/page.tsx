"use client"

import { useState } from 'react'
import { Button } from '@/components/ui/button'
import { Card, CardContent } from '@/components/ui/card'
import { Textarea } from '@/components/ui/textarea'
import { Input } from '@/components/ui/input'
import { Label } from '@/components/ui/label'

const Í≥µÏ†ïÌï≠Î™© = ['Ï≤†Í±∞', 'Î™©Í≥µ', 'Ï†ÑÍ∏∞', 'ÎèÑÏû•', 'ÌïÑÎ¶Ñ', 'ÎèÑÎ∞∞', 'ÌÉÄÏùº', 'Í∞ÄÏä§', 'Ï§ÄÍ≥µÏ≤≠ÏÜå', 'ÎçïÌä∏', 'ÌèêÍ∏∞Î¨ºÏ≤òÎ¶¨', 'ÏûêÏû¨ÏûÖÍ≥†', 'Ï£ºÎ∞©ÏûÖÍ≥†', 'ÏùòÌÉÅÏûêÏûÖÍ≥†', 'ÏÑ§ÎπÑ', 'Î∞©Ïàò', 'ÏÖÄÌîÑÎ†àÎ≤®ÎßÅ', 'ÏñëÏÉù']

export default function Í≥µÏÇ¨Î≥¥Í≥†ÏÉùÏÑ±Í∏∞() {
  const [ÌòÑÏû•Î™Ö, setÌòÑÏû•Î™Ö] = useState('')
  const [Ïò§ÎäòÍ≥µÏ†ï, setÏò§ÎäòÍ≥µÏ†ï] = useState([])
  const [ÎÇ¥ÏùºÍ≥µÏ†ï, setÎÇ¥ÏùºÍ≥µÏ†ï] = useState([])
  const [ÌäπÏù¥ÏÇ¨Ìï≠, setÌäπÏù¥ÏÇ¨Ìï≠] = useState('Í∏àÏùº ÌäπÏù¥ÏÇ¨Ìï≠ ÏóÜÏäµÎãàÎã§.')
  const [Í≤∞Í≥º, setÍ≤∞Í≥º] = useState('')
  const [ÏöîÏïΩ, setÏöîÏïΩ] = useState('')

  const handleToggle = (value, list, setList) => {
    if (list.includes(value)) {
      setList(list.filter(i => i !== value))
    } else {
      setList([...list, value])
    }
  }

  const generate = () => {
    const full = `ÏïàÎÖïÌïòÏÑ∏Ïöî!^^\n[${ÌòÑÏû•Î™Ö}] Î≥¥Í≥†ÎìúÎ¶¨Í≤†ÏäµÎãàÎã§.üôÇ\n\n[Ïò§Îäò] ${Ïò§ÎäòÍ≥µÏ†ï.join(', ')} ÏßÑÌñâÎêòÏóàÏäµÎãàÎã§.\n[ÎÇ¥Ïùº] ${ÎÇ¥ÏùºÍ≥µÏ†ï.join(', ')} ÏòàÏ†ïÏûÖÎãàÎã§.\n\n* ${ÌäπÏù¥ÏÇ¨Ìï≠}\nÍ∞êÏÇ¨Ìï©ÎãàÎã§ ^^`
    const summary = `[Í≥µÏÇ¨Î≥¥Í≥† - ${ÌòÑÏû•Î™Ö}]\nÏò§Îäò: ${Ïò§ÎäòÍ≥µÏ†ï.join(', ')}\nÎÇ¥Ïùº: ${ÎÇ¥ÏùºÍ≥µÏ†ï.join(', ')}\nÌäπÏù¥ÏÇ¨Ìï≠: ${ÌäπÏù¥ÏÇ¨Ìï≠}`
    setÍ≤∞Í≥º(full)
    setÏöîÏïΩ(summary)
  }

  const copyToClipboard = (text) => {
    navigator.clipboard.writeText(text)
  }

  return (
    <div className="max-w-xl mx-auto p-4 space-y-6">
      <Card>
        <CardContent className="space-y-4">
          <div>
            <Label>ÌòÑÏû•Î™Ö</Label>
            <Input value={ÌòÑÏû•Î™Ö} onChange={e => setÌòÑÏû•Î™Ö(e.target.value)} placeholder="Ïòà: Ïù¥Í≤¨Í≥µÍ∞Ñ Îâ¥ÏöïÏ†ê" />
          </div>
          <div>
            <Label>Ïò§Îäò Í≥µÏ†ï</Label>
            <div className="flex flex-wrap gap-2">
              {Í≥µÏ†ïÌï≠Î™©.map(item => (
                <Button key={item} variant={Ïò§ÎäòÍ≥µÏ†ï.includes(item) ? 'default' : 'outline'} size="sm" onClick={() => handleToggle(item, Ïò§ÎäòÍ≥µÏ†ï, setÏò§ÎäòÍ≥µÏ†ï)}>
                  {item}
                </Button>
              ))}
            </div>
          </div>
          <div>
            <Label>ÎÇ¥Ïùº Í≥µÏ†ï</Label>
            <div className="flex flex-wrap gap-2">
              {Í≥µÏ†ïÌï≠Î™©.map(item => (
                <Button key={item} variant={ÎÇ¥ÏùºÍ≥µÏ†ï.includes(item) ? 'default' : 'outline'} size="sm" onClick={() => handleToggle(item, ÎÇ¥ÏùºÍ≥µÏ†ï, setÎÇ¥ÏùºÍ≥µÏ†ï)}>
                  {item}
                </Button>
              ))}
            </div>
          </div>
          <div>
            <Label>ÌäπÏù¥ÏÇ¨Ìï≠</Label>
            <Textarea value={ÌäπÏù¥ÏÇ¨Ìï≠} onChange={e => setÌäπÏù¥ÏÇ¨Ìï≠(e.target.value)} placeholder="ÏóÜÏùå ÎòêÎäî ÌäπÏù¥ÏÇ¨Ìï≠ Î©îÎ™®" />
          </div>
          <Button onClick={generate} className="w-full">Î≥¥Í≥†ÏÑú ÏÉùÏÑ±</Button>
        </CardContent>
      </Card>

      {Í≤∞Í≥º && (
        <div className="space-y-4">
          <Card>
            <CardContent className="whitespace-pre-wrap space-y-2">
              <div>{Í≤∞Í≥º}</div>
              <Button onClick={() => copyToClipboard(Í≤∞Í≥º)} className="mt-2 w-full">Î≥¥Í≥†ÏÑú Î≥µÏÇ¨ÌïòÍ∏∞</Button>
            </CardContent>
          </Card>
          <Card>
            <CardContent className="whitespace-pre-wrap space-y-2">
              <div>{ÏöîÏïΩ}</div>
              <Button onClick={() => copyToClipboard(ÏöîÏïΩ)} className="mt-2 w-full">ÏöîÏïΩ Î≥µÏÇ¨ÌïòÍ∏∞</Button>
            </CardContent>
          </Card>
        </div>
      )}
    </div>
  )
}
